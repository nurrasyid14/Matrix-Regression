# =============================================
# Nginx Configuration for RegressorMatrice
# =============================================
# Acts as a reverse proxy between users and the Flask app container

user  nginx;
worker_processes  auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile      on;
    tcp_nopush    on;
    tcp_nodelay   on;
    keepalive_timeout 65;
    types_hash_max_size 4096;
    server_tokens off;

    # Gzip compression for faster transfers
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    # Main server block
    server {
        listen 80;
        server_name _;

        # Root for static files (optional frontend/dashboard)
        root /var/www/html;
        index index.html;

        # Health check endpoint
        location /health {
            return 200 "OK";
            add_header Content-Type text/plain;
        }

        # Proxy API traffic to Flask backend
        location /api/ {
            proxy_pass http://app_backend:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve frontend static files
        location /static/ {
            alias /var/www/html/static/;
            expires 30d;
            add_header Cache-Control "public";
        }

        # Catch-all for frontend routes
        location / {
            try_files $uri /index.html;
        }
    }
}
